You are my AI coding assistant inside Replit.

Goal:
Implement Step 5 of my project — add geolocation and “nearby stores within radius” filtering to my existing Next.js + Supabase app called PasaLey.

Context:
- The project is a Next.js 14 app using the App Router and TailwindCSS.
- I already have a working Supabase integration that fetches stores from a `stores` table. Each store has fields: id, name, description, address, lat, lng, is_active.
- I want the frontend to request the user’s current location, compute distance to each store, and display only those within a chosen radius (2, 5, 10, 20 km).

Your tasks:

1. **Create `src/lib/geo.ts`**
   - Implement the Haversine formula to compute distance in km between two latitude/longitude pairs.
   - Export:
     ```ts
     export type LatLng = { lat: number; lng: number };
     export function haversine(a: LatLng, b: LatLng): number;
     export function formatKm(km: number): string;
     ```
   - Use Earth radius 6371 km.

2. **Update `app/page.tsx`**
   - Import Supabase client from `@/lib/supabase` and geo helpers from `@/lib/geo`.
   - Fetch stores (`id, name, description, address, lat, lng`) from Supabase, filtering `is_active = true`.
   - Store them in a `stores` state.
   - Request geolocation permission via `navigator.geolocation.getCurrentPosition` when the user clicks a button (“Use my location”).
   - Keep user coordinates in state.
   - Compute distance for each store using `haversine` and filter only those within the selected radius (default 5 km).
   - Sort stores by distance ascending.
   - Provide a dropdown (2 km, 5 km, 10 km, 20 km) to change radius dynamically.
   - Display:
     - Store name, description, address
     - If location available, show distance via `formatKm(distance)`
     - Button to refresh location.

   - Style with Tailwind so layout looks clean and mobile-friendly.

3. **Error handling & UI**
   - Show “Loading stores…” while fetching.
   - Show an error message if location permission denied or fetch fails.
   - If no location given, show all stores (no filtering).
   - If no stores found within radius, show “No stores within the selected radius.”

4. **Verify**
   - Use HTTPS (on Vercel) so geolocation works.
   - Confirm it compiles cleanly (no ESLint errors).
   - Test locally with `npm run dev`.

5. **Commit**
   - Add a commit message:  
     `feat: add geolocation + radius filter + distance display`

When finished, print a summary of which files you created or modified.
